name: docker-splitwisely

services:
  postgres:
    image: postgres
    container_name: splitwise-postgres-db
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"  
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  django-app:
    build: .
    image: splitwisely
    container_name: django-splitwisely
    command: /app/entrypoint.sh
    ports:
      - "${DJANGO_PORT}:${DJANGO_PORT}"
    volumes:
      - .:/app

    depends_on:
      postgres:
        condition: service_healthy
        restart: true

  
  redis:
    image: "redis:alpine"
    container_name: redis-splitwisely
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - ./redis_data:/data

  celery:
    image: splitwisely
    container_name: celery-splitwisely
    command: celery -A splitwise worker -E -l info
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
      - django-app

  flower:
    image: splitwisely
    container_name: flower-splitwisely
    command: celery -A splitwise flower --basic_auth=${FLOWER_USER_NAME}:${FLOWER_PASSWORD}
    ports:
      - "${FLOWER_PORT}:${FLOWER_PORT}"
    depends_on:
      - redis